// Handler per il comando "infostato" o "info-stato"
// Il comando mostra le informazioni dello stato/gruppo e invia un messaggio formattato
const handler = async (m, { conn, participants, groupMetadata }) => {
  // Recupera le impostazioni dal database globale per l'utente (o chat)
  // (Assumendo che le impostazioni siano memorizzate in global.db.data.settings)
  const settings = global.db.data.settings[m.sender.trim()];

  // Filtra i partecipanti per ottenere quelli che sono amministratori
  const adminParticipants = participants.filter(user => user.admin);
  // Crea una lista formattata degli admin (es. "1. 123456789")
  const adminListText = adminParticipants
    .map((admin, index) => `${index + 1}. ${admin.id.split('@')[0]}`)
    .join('\n');

  // Determina il proprietario del gruppo:
  // - se groupMetadata.owner esiste lo usa
  // - altrimenti cerca un admin con ruolo "superadmin"
  // - se tutto fallisce, usa una stringa di fallback basata sul mittente
  const groupOwner =
    groupMetadata.owner ||
    adminParticipants.find(user => user.admin === 'superadmin')?.id ||
    m.sender.trim()[0] + '-0';

  // Crea un "fake message" (messaggio citato) con un extendedTextMessage e un vCard
  // Questo serve per simulare un messaggio ‚Äúquotato‚Äù e per formattare la risposta
  const fakeMessage = {
    key: {
      participants: 'status@broadcast',
      remoteJid: 'status@broadcast',
      fromMe: false,
      id: 'Halo'
    },
    message: {
      extendedTextMessage: {
        text:
          "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢‚ä∞‚úß‚ä±‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n" +
          "ü™¢ ùêàùêßùêüùê® - ùêíùê≠ùêöùê≠ùê® :\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêÅùêûùêßùêØùêûùêßùêÆùê≠ùê® ( üëë )\n" +
          "‚úß ùêàùêßùêØùê¢ùêö ùêÆùêß ùê¶ùêûùê¨ùê¨ùêöùê†ùê†ùê¢ùê® ùêùùê¢ ùêõùêûùêßùêØùêûùêßùêÆùê≠ùê® ùêû ùêùùê¢ ùêöùêùùêùùê¢ùê® ùêúùê®ùêß ùê•ùêö ùêüùê®ùê≠ùê® ùê©ùê´ùê®ùêüùê¢ùê•ùê® ùêùùêûùê•ùê•'ùêÆùê≠ùêûùêßùê≠ùêû ùêúùê°ùêû ùêûùêßùê≠ùê´ùêö ùêû/ùê® ùêûùê¨ùêúùêû ùêùùêöùê• ùê†ùê´ùêÆùê©ùê©ùê®\n\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêíùê®ùê•ùê®ùêÜùê´ùêÆùê©ùê©ùê® ( üëë )\n" +
          "‚úß ùêà ùêúùê®ùê¶ùêöùêßùêùùê¢ ùêùùêûùê• ùêõùê®ùê≠ ùêØùêûùê´ùê´ùêöùêßùêßùê® ùêûùê¨ùêûùê†ùêÆùê¢ùê≠ùê¢ ùê¨ùê®ùê•ùê® ùêßùêûùê• ùê†ùê´ùêÆùê©ùê©ùê® ùêû ùêßùê®ùêß ùê¨ùêöùê´ùêöùêßùêßùê® ùê©ùê¢ùêÆÃÄ ùêûùê¨ùêûùê†ùêÆùê¢ùê≠ùê¢ ùê¢ùêß ùê©ùê´ùê¢ùêØùêöùê≠ùê®\n\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêíùê®ùê•ùê®ùêèùê´ùê¢ùêØùêöùê≠ùê® ( üëë )\n" +
          "‚úß ùêà ùêúùê®ùê¶ùêöùêßùêùùê¢ ùêùùêûùê• ùêõùê®ùê≠ ùêØùêûùê´ùê´ùêöùêßùêßùê® ùêûùê¨ùêûùê†ùêÆùê¢ùê≠ùê¢ ùê¢ùêß ùê©ùê´ùê¢ùêØùêöùê≠ùê® ùêû ùêßùê®ùêß ùê¨ùêöùê´ùêöùêßùêßùê® ùê©ùê¢ùêÆÃÄ ùêûùê¨ùêûùê†ùêÆùê¢ùê≠ùê¢ ùêßùêûùê• ùê†ùê´ùêÆùê©ùê©ùê®\n\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêåùê®ùêùùê®ùêöùêùùê¶ùê¢ùêß ( üëë )\n" +
          "‚úß ùêà ùêúùê®ùê¶ùêöùêßùêùùê¢ ùêùùêûùê• ùêõùê®ùê≠ ùê¨ùêöùê´ùêöùêßùêßùê® ùêûùê¨ùêûùê†ùêÆùê¢ùêõùê¢ùê•ùê¢ ùê¨ùê®ùê•ùê® ùêùùêöùê†ùê•ùê¢ ùêöùê¶ùê¶ùê¢ùêßùê¢ùê¨ùê≠ùê´ùêöùê≠ùê®ùê´ùê¢ ùêùùêûùê• ùê†ùê´ùêÆùê©ùê©ùê®\n\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêÜùê´ùêÆùê©ùê©ùê® ùêÅùêöùêß ( üë§ )\n" +
          "‚úß ùêàùê• ùêõùê®ùê≠ ùêßùê®ùêß ùêûùê¨ùêûùê†ùêÆùê¢ùê´ùêöÃÄ ùê©ùê¢ùêÆÃÄ ùê¢ ùêúùê®ùê¶ùêöùêßùêùùê¢ ùêßùêûùê• ùê†ùê´ùêÆùê©ùê©ùê®\n\n" +
          "    ‚úß‚Äå‚Éü·óí ‚Ä¢ ùêëùêûùê¨ùê≠ùê´ùê¢ùêúùê≠ ùê¨ùêÆùê• ùêõùê®ùê≠ ( üë§ -‚ùóÔ∏è )\n" +
          "‚úß ùêÇùê®ùê¶ùêöùêßùêùùê® ùêßùêûùêúùêûùê¨ùê¨ùêöùê´ùê¢ùê® ùê©ùêûùê´ ùê¢ùê• ùêüùêÆùêßùê≥ùê¢ùê®ùêßùêöùê¶ùêûùêßùê≠ùê® ùêúùê®ùê´ùê´ùêûùê≠ùê≠ùê® ùêùùêûùê•ùê•ùêû ùêüùêÆùêßùê≥ùê¢ùê®ùêßùê¢ ( ùê≠ùêûùêßùêûùê´ùê•ùê® ùê¨ùêûùê¶ùê©ùê´ùêû ùêöùê≠ùê≠ùê¢ùêØùê® )\n" +
          "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n" +
          "‚úß ùêàùêçùêÖùêé\n" +
          "( üëë ) ùêÇùê®ùê¶ùêöùêßùêùùê® ùêûùê¨ùêûùê†ùêÆùê¢ùêõùê¢ùê•ùêû ùêùùêö ùêöùêùùê¶ùê¢ùêß ùêû ùê®ùê∞ùêßùêûùê´\n" +
          "( üë§ ) ùêÇùê®ùê¶ùêöùêßùêùùê® ùêûùê¨ùêûùê†ùêÆùê¢ùêõùê¢ùê•ùêû ùê¨ùê®ùê•ùê® ùêùùêö ùêÆùêß ùê®ùê∞ùêßùêûùê´\n" +
          "( ‚ùóÔ∏è ) ùêìùêûùêßùêûùê´ùêû ùê¨ùêûùê¶ùê©ùê´ùêû ùêöùê≠ùê≠ùê¢ùêØùê®\n" +
          "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢‚ä∞‚úß‚ä±‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n",
        vcard:
          "BEGIN:VCARD\n" +
          "VERSION:3.0\n" +
          "N:;Unlimited;;;\n" +
          "FN:Unlimited\n" +
          "ORG:Unlimited\n" +
          "TITLE:\n" +
          "item1.TEL;waid=19709001746:+1 (970) 900-1746\n" +
          "item1.X-ABLabel:Unlimited\n" +
          "X-WA-BIZ-DESCRIPTION:ofc\n" +
          "X-WA-BIZ-NAME:Unlimited\n" +
          "END:VCARD"
      }
    },
    participant: 'status@broadcast'
  };

  // Identificativo fittizio per il messaggio (pu√≤ essere generato dinamicamente se necessario)
  const fakeJid = 'ùïÄùêçùêÖ·è´ ùêíùêìùö≤ùêì·è´ üõ°Ô∏è';

  // Invia il messaggio utilizzando il metodo sendMessage della connessione
  // L'opzione "reply" include tutti gli id dei partecipanti e il proprietario del gruppo
  conn.sendMessage(
    m.sender,
    fakeJid,
    fakeMessage,
    m,
    false,
    { reply: [...participants.map(u => u.id), groupOwner] }
  );
};

// Propriet√† di configurazione del comando
handler.help = ['infostato'];
handler.tags = ['chats'];
handler.command = /^(infostato|info-stato|testot)$/i;


export default handler;